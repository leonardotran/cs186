-- Before running drop any existing views
DROP VIEW IF EXISTS q0;
DROP VIEW IF EXISTS q1i;
DROP VIEW IF EXISTS q1ii;
DROP VIEW IF EXISTS q1iii;
DROP VIEW IF EXISTS q1iv;
DROP VIEW IF EXISTS q2i;
DROP VIEW IF EXISTS q2ii;
DROP VIEW IF EXISTS q2iii;
DROP VIEW IF EXISTS q3i;
DROP VIEW IF EXISTS q3ii;
DROP VIEW IF EXISTS q3iii;
DROP VIEW IF EXISTS q4i;
DROP VIEW IF EXISTS q4ii;
DROP VIEW IF EXISTS q4iii;
DROP VIEW IF EXISTS q4iv;
DROP VIEW IF EXISTS q4v;

-- Question 0
CREATE VIEW q0(era)
AS
  SELECT MAX(era)
  FROM pitching
;

-- Question 1i
CREATE VIEW q1i(namefirst, namelast, birthyear)
AS
  SELECT namefirst, namelast, birthyear -- replace this line
  FROM people
  WHERE weight > 300
;
-- Question 1ii
CREATE VIEW q1ii(namefirst, namelast, birthyear)
AS
  SELECT namefirst, namelast, birthyear -- replace this line
  FROM people
  WHERE namefirst LIKE '% %'
  ORDER BY namefirst, namelast DESC
;

-- Question 1iii
CREATE VIEW q1iii(birthyear, avgheight, count)
AS
  SELECT birthyear, AVG(height) AS avgheight, COUNT(*) AS count -- replace this line
  FROM people
  GROUP BY birthyear
  ORDER BY birthyear 
;

-- Question 1iv
CREATE VIEW q1iv(birthyear, avgheight, count)
AS
  -- SELECT * -- replace this line
  -- FROM q1iii
  -- WHERE avgheight > 70
  SELECT birthyear, AVG(height) AS avgheight, COUNT(*) AS count -- replace this line
  FROM people
  GROUP BY birthyear
  HAVING avgheight > 70
  ORDER BY birthyear 

;
----------------------------------------------------------------------------------------------------------------
-- Question 2i
CREATE VIEW q2i(namefirst, namelast, playerid, yearid)
AS
  -- SELECT 1, 1, 1, 1 -- replace this line
  SELECT p.namefirst, p.namelast, h.playerid, h.yearid
  FROM people AS p INNER JOIN halloffame AS h
  ON p.playerid = h.playerid
  WHERE h.inducted == 'Y'
  ORDER BY yearid DESC, h.playerid ASC

;

-- Question 2ii
DROP VIEW IF EXISTS q2ii_helper;
CREATE VIEW q2ii_helper(schoolid, playerid)
AS
  SELECT c.schoolid, c.playerid
  FROM collegeplaying as c
  INNER JOIN schools ON c.schoolid = schools.schoolid AND schools.schoolstate = 'CA'
;
CREATE VIEW q2ii(namefirst, namelast, playerid, schoolid, yearid)
AS
  -- SELECT 1, 1, 1, 1, 1 -- replace this line
  SELECT namefirst, namelast, playerid, schoolid, yearid
  FROM q2ii_helper AS h NATURAL JOIN q2i AS q 
  ORDER BY yearid DESC, schoolid, playerid ASC
;

-- Question 2iii
DROP VIEW IF EXISTS helper;
CREATE VIEW helper(schoolid, playerid)
AS
  SELECT c.schoolid, c.playerid
  FROM collegeplaying as c
  INNER JOIN schools on c.schoolid = schools.schoolid
;

CREATE VIEW q2iii(playerid, namefirst, namelast, schoolid)
AS
  -- SELECT 1, 1, 1, 1 -- replace this line
  SELECT q.playerid, namefirst, namelast, schoolid
  FROM q2i AS q LEFT OUTER JOIN collegeplaying AS c
  ON q.playerid = c.playerid
  ORDER BY q.playerid DESC, schoolid ASC
;
----------------------------------------------------------------------------------------------------------------
-- Question 3i
CREATE VIEW q3i(playerid, namefirst, namelast, yearid, slg)
AS
  -- SELECT 1, 1, 1, 1 -- replace this line
  SELECT p.playerid, namefirst, namelast, yearid, 
  cast((b.H - b.H2B - b.H3B - b.HR + (2*b.H2B) + (3*b.H3B) + (4*b.HR)) AS float)/ cast(b.AB AS float) AS slg  
  FROM people AS p INNER JOIN batting AS b 
  ON b.playerid = p.playerid
  WHERE b.AB > 50
  ORDER BY slg DESC, yearid, p.playerid ASC
  LIMIT 10
;

-- Question 3ii
CREATE VIEW q3ii(playerid, namefirst, namelast, lslg)
AS
  SELECT p.playerid, namefirst, namelast,
(SUM(b.H - b.H2B - b.H3B - b.HR + (2*b.H2B) + (3*b.H3B) + (4*b.HR))+ 0.0)/ (SUM(b.AB)+ 0.0) as lslg --different way to cast to float.
  FROM people AS p INNER JOIN batting AS b 
  ON b.playerid = p.playerid
  GROUP BY b.playerid
  HAVING SUM(b.AB) > 50
  ORDER BY lslg DESC, p.playerid ASC
  LIMIT 10;

-- Question 3iii
DROP VIEW IF EXISTS lslg;
CREATE VIEW lslg(playerid, lslgval)
AS 
  SELECT playerid, 
  cast(SUM(b.H - b.H2B - b.H3B - b.HR + (2*b.H2B) + (3*b.H3B) + (4*b.HR)) AS float)/ 
  cast(SUM(b.AB) AS float)
  FROM batting as b
  GROUP BY playerid
  HAVING SUM(AB) > 50
;
CREATE VIEW q3iii(namefirst, namelast, lslg)
AS
  -- SELECT 1, 1, 1 -- replace this line
  SELECT p.namefirst, p.namelast, h.lslgval
  FROM people AS p INNER JOIN lslg AS h
  ON h.playerid = p.playerid
  WHERE h.lslgval >
    (
    SELECT lslgval 
    FROM lslg 
    WHERE playerid = 'mayswi01'
    )
;
----------------------------------------------------------------------------------------------------------------

-- Question 4i
CREATE VIEW q4i(yearid, min, max, avg)
AS
  -- SELECT 1, 1, 1, 1 -- replace this line
  SELECT yearid, MIN(salary) AS min, MAX(salary) AS max, AVG(salary) AS avg-- replace this line
  FROM salaries
  GROUP BY yearid
  ORDER BY yearid 
;

-- Helper table for 4ii

DROP VIEW IF EXISTS q4ii_helper;
CREATE VIEW q4ii_helper(binid, low, high) 
AS
  WITH oldSalary as (
    SELECT yearid, MIN(salary) AS min, MAX(salary) AS max, MAX(salary)-MIN(salary) AS rangeSalary-- replace this line
    FROM salaries
    GROUP BY yearid
    ORDER BY yearid 
  ), binid AS (VALUES (0), (1), (2), (3), (4), (5), (6), (7), (8), (9))
  SELECT binid,  CAST(oldSalary.min + (binid) * (oldSalary.max-oldSalary.min)/10 AS FLOAT) AS low, 
  CAST(oldSalary.min + (binid+1) * (rangeSalary)/10 AS FLOAT) AS high
  from binids, oldSalary
  where yearid = 2016
  group by binid
;


-- Question 4ii
CREATE VIEW q4ii(binid, low, high, count)
AS
  SELECT binid, low, high, count(*)
  FROM q4ii_helper INNER JOIN salaries ON salary >= low and salary <= high and yearid = 2016
  GROUP BY binid, low, high
  ORDER BY binid ASC
;


-- Question 4iii
CREATE VIEW q4iii(yearid, mindiff, maxdiff, avgdiff)
AS
  WITH newSalaries AS 
  (
    SELECT yearid, MIN(salary) AS min, MAX(salary) AS max, AVG(salary) AS avg-- replace this line
    FROM salaries
    GROUP BY yearid
    ORDER BY yearid ASC
  )
 SELECT previous.yearid, previous.min-present.min AS mindiff, previous.max-present.max AS maxdiff, previous.avg-present.avg AS avgdiff
  FROM newSalaries AS present, newSalaries AS previous
  WHERE previous.yearid-present.yearid = 1
;

-- Question 4iv
DROP VIEW IF EXISTS q4iv_helper;
CREATE VIEW q4iv_helper(max_salary, yearid)
AS
  SELECT MAX(salary) AS max_salary, yearid
	FROM Salaries AS s
	WHERE yearid = '2000' OR yearid ='2001'
	GROUP BY yearid
;

CREATE VIEW q4iv(playerid, namefirst, namelast, salary, yearid)
AS
  -- SELECT 1, 1, 1, 1, 1 -- replace this line
  SELECT p.playerid, p.namefirst, p.namelast, s.salary, h.yearid
	FROM people AS p INNER JOIN Salaries AS s
    ON p.playerid = s.playerid
  INNER JOIN q4iv_helper AS h
	  ON s.yearID = h.yearid AND s.salary = h.max_salary
;
-- Question 4v
CREATE VIEW q4v(team, diffAvg) AS
  SELECT a.teamid AS team, MAX(s.salary) - MIN(s.salary) AS diffAvg
	FROM AllStarFull AS a INNER JOIN Salaries AS s
	ON a.playerid = s.playerid
	AND s.yearid = '2016'
  AND a.yearid = '2016'
	GROUP BY a.teamid
;
